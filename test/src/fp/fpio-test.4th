\ FPIO-TEST.FS
\
\ EVALUATE THE FLOATING POINT INPUT/OUTPUT NUMBER CONVERSION OF A
\ FORTH SYSTEM WHICH USES IEEE FLOATING POINT FORMAT.
\
\ COPYRIGHT (C) 2010, KRISHNA MYNENI
\
\ PERMISSION IS GRANTED TO USE THIS CODE FOR ANY PURPOSE,
\ PROVIDED THE COPYRIGHT NOTICE ABOVE IS PRESERVED.
\
\ REVISIONS:
\    2010-11-28  KM  CREATED.
\    2010-11-30  KM  REVISED COMMENTS; ADDED ROUNDING TESTS PROVIDED
\                    BY ANDREW P. HALEY, AND OTHERS [1].
\    2010-12-01  KM  ADDED FURTHER EXAMPLES FROM [1--3]; SEPARATED
\                    SECTION 2 TESTS BASED ON SYSTEM FP PRECISION
\                    TO AVOID DOUBLE ROUNDING.
\
\ NOTES:
\   0. THE "TESTS" PERFORMED BY THIS MODULE ARE INTENDED TO ASSESS
\      THE BEHAVIOR OF FP NUMBER CONVERSION FOR A FORTH SYSTEM.
\      FAILURE OF CERTAIN TESTS BY A GIVEN FORTH SYSTEM DOES NOT
\      IMPLY THAT THE SYSTEM DOES NOT CONFORM TO ANY PRESENT FORTH
\      STANDARD, E.G. FORTH-94.

\   1. TESTS ARE VALID ONLY FOR SYSTEMS WHICH USE IEEE FLOATING POINT
\      FORMATS TO REPRESENT FP NUMBERS. "ROUND TO NEAREST" MODE
\      IS ASSUMED (IEEE 754 "NEAREST TIES TO EVEN" ROUNDING MODE).
\
\   2. THE FORTH SYSTEM'S FLOATING POINT NUMBER CONVERSION
\      SHOULD BE CAPABLE OF PROCESSING AT LEAST 55 DIGITS
\      EXCLUDING THE EXPONENT FIELD, IN ORDER TO RUN ALL OF THESE
\      TESTS.
\
\   3. CURRENTLY, ONLY TESTS FOR FLOATING POINT NUMBER INPUT
\      AT SINGLE AND AND DOUBLE PRECISION ARE PERFORMED; NEED
\      TO ADD EXTENDED PRECISION TESTS FOR THOSE SYSTEMS WHICH
\      SUPPORT THE 10 BYTE FORMAT. ALSO NEED TO TEST >FLOAT
\      AND REPRESENT.
\
\   4. USES THE ENHANCED TTESTER-XF TEST HARNESS BY DAVID N.
\      WILLIAMS; HOWEVER, THE OLDER TTESTER.FS MAY ALSO BE
\      USED.
\
\ REFERENCES:
\   1. HTTP://SOURCEWARE.ORG/BUGZILLA/SHOW_BUG.CGI?ID=3479
\
\   2. R. REGAN, "INCORRECTLY ROUNDED CONVERSIONS IN GCC AND GLIBC",
\      HTTP://WWW.EXPLORINGBINARY.COM/INCORRECTLY-ROUNDED-CONVERSIONS-IN-GCC-AND-GLIBC/
\      JUNE 3, 2010.
\
\   3. R. REGAN, "INCORRECTLY ROUNDED CONVERSIONS IN VISUAL C++",
\      HTTP://WWW.EXPLORINGBINARY.COM/INCORRECTLY-ROUNDED-CONVERSIONS-IN-VISUAL-C-PLUS-PLUS/
\      MAY 28, 2010.

CR .( RUNNING FPIO-TEST.4TH)
CR .( ---------------------)

CR .( FPIO-TEST         V1.1      01 DEC     2010 )
BASE @
[UNDEFINED] T{ [IF] S" TTESTER" INCLUDED [THEN]

HEX
  4  CONSTANT  SINGLE_PREC
  8  CONSTANT  DOUBLE_PREC
  A  CONSTANT  EXT_PREC
 10  CONSTANT  QUAD_PREC

1 FLOATS CONSTANT SYSTEM_PREC

\ THE FOLLOWING DEFINITIONS ARE TAKEN FROM THE REFERENCE IMPLEMENTATION
\ OF THE MEMORY ACCESS WORDS RFD (V. 20100621), FOR FORTH 200X.

: B!    ( X ADDR --    ) SWAP FF AND SWAP C! ;
: B@    (   ADDR -- X  ) C@ FF AND ;
: BYTES CHARS ( N1 -- N2 ) ;

: B@+ ( X1 ADDR1 -- X2 ADDR2 )  SWAP 8 LSHIFT OVER B@ + SWAP 1 BYTES + ;
: B@- ( X1 ADDR1 -- X2 ADDR2 )  1 BYTES - DUP B@ ROT 8 LSHIFT + SWAP ;

: BE-L@ ( ADDR -- X )  0 SWAP  B@+ B@+ B@+ B@+    DROP ;
: LE-L@ ( ADDR -- X )  0 SWAP 4 BYTES + B@- B@- B@- B@- DROP ;

1234 PAD !
PAD B@ 34 = [IF]
\ LITTLE-ENDIAN SYSTEMS
: L@   ( A -- U ) LE-L@ ;
: LDF@ ( A -- U ) L@ ;
: UDF@ ( A -- U ) 4 BYTES + L@ ;
[ELSE]
\ BIG-ENDIAN SYSTEMS
: L@   ( A -- U ) BE-L@ ;
: LDF@ ( A -- U ) 4 BYTES + L@ ;
: UDF@ ( A -- U ) L@ ;
[THEN] 

: 2L@ DUP UDF@ SWAP LDF@ ;

CREATE R4   4 BYTES ALLOT
CREATE R8   8 BYTES ALLOT

: !R ( A -- ) ( F: R -- ) FDUP R4 SF! R8 DF! ;

: DEC_T{  DECIMAL T{ ;
: HEX_T{  HEX     T{ ;

\ SECTION 1.
CR
TESTING CONVERSION OF EXACTLY REPRESENTABLE NUMBERS
DEC_T{  0.000000000000000000000000E0 !R -> }T
HEX_T{  R4 L@  ->  00000000 }T
HEX_T{  R8 2L@ ->  00000000 00000000 }T

DEC_T{  9.99999935045640392457461415399766451285519391957298315801212E-39 !R -> }T
HEX_T{  R4 L@ ->  006CE3EE }T
HEX_T{  R8 2L@ ->  380B38FB 80000000 }T

DEC_T{ -1.00000001335143196001808973960578441619873046875E-10 !R -> }T
HEX_T{  R4 L@  ->  AEDBE6FF }T
HEX_T{  R8 2L@ ->  BDDB7CDF E0000000 }T

DEC_T{  9.99999974737875163555145263671875E-05 !R -> }T
HEX_T{  R4 L@  ->  38D1B717 }T
HEX_T{  R8 2L@ ->  3F1A36E2 E0000000 }T

DEC_T{  0.100000001490116119384765625E0 !R -> }T
HEX_T{  R4 L@  ->  3DCCCCCD }T
HEX_T{  R8 2L@ ->  3FB99999 A0000000 }T

DEC_T{  1.0E0 !R -> }T
HEX_T{  R4 L@  ->  3F800000 }T
HEX_T{  R8 2L@ ->  3FF00000 00000000 }T

DEC_T{ -1.0E0 !R -> }T
HEX_T{  R4 L@  ->  BF800000 }T
HEX_T{  R8 2L@ ->  BFF00000 00000000 }T

DEC_T{  3.926990926265716552734375E-1 !R -> }T
HEX_T{  R4 L@  ->  3EC90FDB  }T
HEX_T{  R8 2L@ ->  3FD921FB 60000000 }T

DEC_T{  5.235987901687622070312500E-1 !R -> }T
HEX_T{  R4 L@  ->  3F060A92 }T
HEX_T{  R8 2L@ ->  3FE0C152 40000000 }T

DEC_T{  7.853981852531433105468750E-1 !R -> }T
HEX_T{  R4 L@  ->  3F490FDB }T
HEX_T{  R8 2L@ ->  3FE921FB 60000000 }T

DEC_T{  1.047197580337524414062500E0 !R -> }T
HEX_T{  R4 L@  ->  3F860A92 }T
HEX_T{  R8 2L@ ->  3FF0C152 40000000 }T

DEC_T{  1.178097248077392578125000E0 !R -> }T
HEX_T{  R4 L@  ->  3F96CBE4 }T
HEX_T{  R8 2L@ ->  3FF2D97C 80000000 }T

DEC_T{  1.570796370506286621093750E0 !R -> }T
HEX_T{  R4 L@  ->  3FC90FDB }T
HEX_T{  R8 2L@ ->  3FF921FB 60000000 }T

DEC_T{  1.963495373725891113281250E0 !R -> }T
HEX_T{  R4 L@  ->  3FFB53D1 }T
HEX_T{  R8 2L@ ->  3FFF6A7A 20000000 }T

DEC_T{  2.094395160675048828125000E0 !R -> }T
HEX_T{  R4 L@  ->  40060A92 }T
HEX_T{  R8 2L@ ->  4000C152 40000000 }T

DEC_T{  2.356194496154785156250000E0 !R -> }T
HEX_T{  R4 L@  ->  4016CBE4 }T
HEX_T{  R8 2L@ ->  4002D97C 80000000 }T

DEC_T{  2.617993831634521484375000E0 !R -> }T
HEX_T{  R4 L@  ->  40278D36 }T
HEX_T{  R8 2L@ ->  4004F1A6 C0000000 }T

DEC_T{  2.748893499374389648437500E0 !R -> }T
HEX_T{  R4 L@  ->  402FEDDF }T
HEX_T{  R8 2L@ ->  4005FDBB E0000000 }T

DEC_T{  3.141592741012573242187500E0 !R -> }T
HEX_T{  R4 L@  ->  40490FDB }T
HEX_T{  R8 2L@ ->  400921FB 60000000 }T

DEC_T{  10E0 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  1.0E1 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  0.10E2 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  0.010E3 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  0.0000010E7 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  0.000000000000010E15 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  0.0000000000000000000000000000000000010E37 !R -> }T
HEX_T{  R4 L@  ->  41200000 }T
HEX_T{  R8 2L@ ->  40240000 00000000 }T

DEC_T{  1.0E10  !R -> }T
HEX_T{  R4 L@  ->  501502F9 }T
HEX_T{  R8 2L@ ->  4202A05F 20000000 }T

DEC_T{  9999999933815812510711506376257961984E0 !R -> }T
HEX_T{  R4 L@  ->  7CF0BDC2  }T
HEX_T{  R8 2L@ ->  479E17B8 40000000 }T

\ SECTION 2.
CR
SYSTEM_PREC DOUBLE_PREC > [IF]
.( SYSTEM FP PRECISION IS NOT SUPPORTED FOR THE ROUNDING TESTS. ) CR
[ELSE]
TESTING ROUNDING OF NUMBERS

SYSTEM_PREC SINGLE_PREC = [IF]
DEC_T{  1.0E-10 !R -> }T
HEX_T{  R4 L@  -> 2EDBE6FF }T

DEC_T{  2.71828182845904523536E0 !R -> }T
HEX_T{  R4 L@  -> 402DF854 }T

DEC_T{  3.14159265358979323846E0 !R -> }T
HEX_T{  R4 L@  -> 40490FDB }T

DEC_T{  3.518437208883201171875E+013 !R -> }T
HEX_T{  R4 L@  -> 56000000 }T

DEC_T{  1.00000005960464477550E0 !R -> }T
HEX_T{  R4 L@  -> 3F800001 }T

DEC_T{  5.00000000000000166533453693773481063544750213623046875E-1 !R -> }T
HEX_T{  R4 L@  -> 3F000000 }T

DEC_T{  62.5364939768271845828E0 !R -> }T
HEX_T{  R4 L@  -> 427A255F }T

DEC_T{  8.10109172351E-10 !R ->  }T
HEX_T{  R4 L@  -> 305EAE5D }T

DEC_T{  1.50000000000000011102230246251565404236316680908203125E0 !R ->  }T
HEX_T{  R4 L@  -> 3FC00000 }T

DEC_T{  9007199254740991.4999999999999999999999999999999995E0 !R ->  }T
HEX_T{  R4 L@  -> 5A000000 }T

DEC_T{  1.000000000000000111022302462515654042363166809082031250E+00 !R -> }T
HEX_T{  R4 L@  -> 3F800000 }T

DEC_T{  1.000000000000000111022302462515654042363166809082031251E+00 !R -> }T
HEX_T{  R4 L@  -> 3F800000 }T

DEC_T{  1.000000000000000111022302462515654042363166809082031251E+00 !R -> }T
HEX_T{  R4 L@  -> 3F800000 }T
[ELSE]

DEC_T{  1.0E-10 !R -> }T
HEX_T{  R8 2L@ -> 3DDB7CDF D9D7BDBB }T

DEC_T{  2.71828182845904523536E0 !R -> }T
HEX_T{  R8 2L@ -> 4005BF0A 8B145769 }T

DEC_T{  3.14159265358979323846E0 !R -> }T
HEX_T{  R8 2L@ -> 400921FB 54442D18 }T

DEC_T{  3.518437208883201171875E+013 !R -> }T
HEX_T{  R8 2L@ -> 42C00000 00000002 }T

DEC_T{  1.00000005960464477550E0 !R -> }T
HEX_T{  R8 2L@ -> 3FF00000 10000000 }T

DEC_T{  5.00000000000000166533453693773481063544750213623046875E-1 !R -> }T
HEX_T{  R8 2L@ -> 3FE00000 00000002 }T

DEC_T{  62.5364939768271845828E0 !R -> }T
HEX_T{  R8 2L@ -> 404F44AB D5AA7CA4 }T

DEC_T{  8.10109172351E-10 !R ->  }T
HEX_T{  R8 2L@ -> 3E0BD5CB AEF0FD0C }T

DEC_T{  9214843084008499E0 !R -> }T
HEX_T{  R8 2L@ -> 43405E6C EC57761A }T

DEC_T{  1.50000000000000011102230246251565404236316680908203125E0 !R ->  }T
HEX_T{  R8 2L@ ->  3FF80000 0 }T

DEC_T{  9007199254740991.4999999999999999999999999999999995E0 !R ->  }T
HEX_T{  R8 2L@ -> 433FFFFF FFFFFFFF }T

DEC_T{  1.000000000000000111022302462515654042363166809082031250E+00 !R -> }T
HEX_T{  R8 2L@ -> 3FF00000 00000000 }T

DEC_T{  1.000000000000000111022302462515654042363166809082031251E+00 !R -> }T
HEX_T{  R8 2L@ -> 3FF00000 00000001 }T

[THEN]

[THEN]
BASE !

CR .( END OF FPIO-TEST.4TH) CR

