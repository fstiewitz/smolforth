ONLY FORTH DEFINITIONS
VOCABULARY IO:UART
ALSO IO:UART DEFINITIONS

BEGIN-STRUCTURE UART:CTL
    0 +FIELD UART:CTL:RBR
    0 +FIELD UART:CTL:THR
    1 +FIELD UART:CTL:DLL
    0 +FIELD UART:CTL:IER
    1 +FIELD UART:CTL:DLM
    0 +FIELD UART:CTL:IIR
    1 +FIELD UART:CTL:FCR
    CFIELD: UART:CTL:LCR
    CFIELD: UART:CTL:MCR
    CFIELD: UART:CTL:LSR
    CFIELD: UART:CTL:MSR
END-STRUCTURE

HEX
10000000 CONSTANT BASEPTR

REQUIRE ring.fth

ONLY FORTH
ALSO IO:UART DEFINITIONS
ALSO RING

CREATE QUEUE 80000 RING:ALLOT

VARIABLE UART:EKEY-WFI
0 UART:EKEY-WFI !

: GETCHAR ( -- char | 0 )
    BASEPTR UART:CTL:LSR C@ 1 AND 1 = IF
        BASEPTR UART:CTL:RBR C@
    ELSE
        0
    THEN
;

: PUSHCHAR ( char -- )
    QUEUE RING:PUSH INVERT IF ." OVERFLOW" CR THEN
;

ALSO FORTH DEFINITIONS

: EMIT
    BASEPTR UART:CTL:THR C!
    BEGIN
        BASEPTR UART:CTL:LSR C@ 60 AND 60 =
    UNTIL
;

PREVIOUS

: POPCHAR ( -- char -1 | 0 )
    QUEUE RING:POP
;

ONLY FORTH DEFINITIONS
ALSO IO:UART

: IO:UART:INIT
    3 BASEPTR UART:CTL:LCR C!
    1 BASEPTR UART:CTL:FCR C!
    BASEPTR UART:CTL:LCR DUP C@ 80 OR SWAP C!
    3 DUP
    FF AND BASEPTR UART:CTL:DLL C!
    8 RSHIFT BASEPTR UART:CTL:DLM C!
    3 BASEPTR UART:CTL:LCR C!
    1 BASEPTR UART:CTL:IER C!
;

: CR 0D EMIT 0A EMIT ;

: TYPE
    BEGIN
        DUP 0 >
    WHILE
        OVER C@ EMIT
        1 /STRING
    REPEAT
    2DROP
;

: IO:UART:IRQ
    GETCHAR PUSHCHAR
    UART:EKEY-WFI @ ?DUP IF
        EXECUTE
    THEN
;

CODE EKEY
    A0 X0 0 *ADDI
    *ECALL
    A0 *PUSH
    *RET
END-CODE

CODE EKEY?
    A0 X0 2 *ADDI
    *ECALL
    A0 *PUSH
    *RET
END-CODE


INCLUDE0 ../../facility.fth
HEX

: ACCEPT ( c-addr len -- c-addr len )
    2DUP 2>R
    0 >R
    BEGIN
        DUP 0 >
        R@ INVERT AND
    WHILE
        EKEY
        EKEY>CHAR IF
            2 PICK C!
            1 /STRING
        ELSE
            DUP 0A = IF R> DROP -1 >R THEN
            0D = IF R> DROP -1 >R THEN
        THEN
    REPEAT
    R> DROP
    2R> NIP SWAP - NIP
;

: REFILL
    BLK @ IF 0 EXIT THEN
    SOURCE-ID 0 > IF 0 EXIT THEN
    SOURCE-ID 0 < IF 0 EXIT THEN
    LINE-BUFFER 256 ACCEPT LINE-SIZE !
    LINE-BUFFER LINE-PTR !
    0 PAO !
    -1
;
